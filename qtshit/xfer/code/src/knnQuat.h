#ifndef KNN_QUAT
#define KNN_QUAT

#include "quatnorm.h"
#include <float.h>

const int KNN_Q_K = 4;
const int KNN_MAX_SAMPLES = 16;

/*
const int KNN_Q_SAMPLES = 32;
const Vec4d interpQuats[32] = {
	Vec4d(0, 0, 0, 1),
	Vec4d(-1, -0, 0, 0),
	Vec4d(-0, -1, 0, 0),
	Vec4d(-0, 0, -1, 0),
	Vec4d(-0.788284, 0.365844, 0.357541, 0.341952),
	Vec4d(0.365844, -0.788284, 0.357541, 0.341952),
	Vec4d(0.365844, 0.357541, -0.788284, 0.341952),
	Vec4d(-0.365844, -0.357541, -0.341952, 0.788284),
	Vec4d(0.788284, 0.365844, 0.357541, 0.341952),
	Vec4d(0.365844, 0.788284, 0.357541, 0.341952),
	Vec4d(0.365844, 0.357541, 0.788284, 0.341952),
	Vec4d(0.365844, 0.357541, 0.341952, 0.788284),
	Vec4d(0.788284, -0.365844, -0.357541, 0.341952),
	Vec4d(-0.365844, 0.788284, -0.357541, 0.341952),
	Vec4d(-0.365844, -0.357541, 0.788284, 0.341952),
	Vec4d(-0.365844, -0.357541, 0.341952, 0.788284),
	Vec4d(-0.788284, -0.365844, -0.357541, 0.341952),
	Vec4d(-0.365844, -0.788284, -0.357541, 0.341952),
	Vec4d(-0.365844, -0.357541, -0.788284, 0.341952),
	Vec4d(0.365844, 0.357541, -0.341952, 0.788284),
	Vec4d(-0.788284, 0.365844, -0.357541, 0.341952),
	Vec4d(0.365844, -0.788284, -0.357541, 0.341952),
	Vec4d(0.365844, -0.357541, -0.788284, 0.341952),
	Vec4d(-0.365844, 0.357541, -0.341952, 0.788284),
	Vec4d(0.788284, 0.365844, -0.357541, 0.341952),
	Vec4d(0.365844, 0.788284, -0.357541, 0.341952),
	Vec4d(0.365844, -0.357541, 0.788284, 0.341952),
	Vec4d(0.365844, -0.357541, 0.341952, 0.788284),
	Vec4d(0.788284, -0.365844, 0.357541, 0.341952),
	Vec4d(-0.365844, 0.788284, 0.357541, 0.341952),
	Vec4d(-0.365844, 0.357541, 0.788284, 0.341952),
	Vec4d(-0.365844, 0.357541, 0.341952, 0.788284)};
*/


Vec3d knnQuatInterp(const QuatNorm &q, Vec4d *interpQuats, int numInterpQuats,
				Vec3d *samples, double *weights = NULL);

Vec3d knnQuatInterp(const QuatNorm &q, Vec4d *interpQuats, int numInterpQuats,
				Vec3d *samples, double *weights, Vec3d *derivs);

#endif
